"""
농장에는 H x W 크기의 직사각형 필드가 있습니다. 
이 필드에서, 모래알은 알파벳 #로 표시되고 빈 땅은 .으로 표시됩니다. 
두 개 이상의 모래알은 4방향(위, 아래, 왼쪽, 오른쪽)으로 연결되어 하나의 모래 더미를 형성합니다.

필드의 전체 맵이 주어졌을 때, 모래 더미의 개수를 계산하세요.

입력:

첫 번째 줄에는 두 개의 정수 H와 W가 주어집니다. (1 ≤ H, W ≤ 100)
다음 H개의 줄에는 필드의 상태를 나타내는 .과 #로 구성된 문자열이 주어집니다.

출력:
필드에서 모래 더미의 개수를 나타내는 정수를 출력하세요.

예제 입력:
3 5
##..#
.#..#
.#...

예제 출력:
3
"""

# DFS로 특정 위치에서 시작하여 연결된 모든 잔디(#)를 탐색하고, 방문한 위치를 빈 땅(.)으로 바꿉니다.
# 범위를 벗어나거나 이미 방문한 위치는 탐색하지 않습니다.

# 모든 위치 탐색:

# 격자 안의 모든 위치를 순회하며, 잔디(#)가 발견될 경우 새로운 잔디 더미로 간주하고 DFS를 호출합니다.
# DFS를 호출한 후, 더미의 개수를 1 증가시킵니다.

# 탐색이 끝난 후 잔디 더미의 개수를 출력합니다.

def count_mole_dimes(field):
    h, w = len(field), len(field[0])
    count = 0

    def dfs(i, j):
        if i < 0 or i >= h or j < 0 or j >= w or field[i][j] != '#':
            return
        field[i][j] = '.'  # 방문한 곳은 빈 땅으로 변경
        # 4방향 탐색
        dfs(i-1, j)  # 위
        dfs(i+1, j)  # 아래
        dfs(i, j-1)  # 왼쪽
        dfs(i, j+1)  # 오른쪽

    for i in range(h):
        for j in range(w):
            if field[i][j] == '#':  # 새로운 모래 더미 발견
                count += 1
                dfs(i, j)  # 연결된 모든 모래 탐색

    return count

# 입력 처리
h, w = map(int, input().split())
field = [list(input()) for _ in range(h)]
print(count_mole_dimes(field))
